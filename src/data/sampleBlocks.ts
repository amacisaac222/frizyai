import {
  Block,
  BlockLane,
  BlockStatus,
  Priority,
  EnergyLevel,
  Complexity,
  AISuggestion
} from '@/lib/types'

export const sampleBlocks: Block[] = [
  // Vision Lane
  {
    id: 'vision-1',
    projectId: '1',
    title: 'Create the ultimate project management tool',
    content: 'Build a tool that solves context loss between Claude sessions and helps developers stay organized across complex projects.',
    lane: BlockLane.VISION,
    status: BlockStatus.IN_PROGRESS,
    progress: 25,
    effort: 100,
    priority: Priority.HIGH,
    claudeSessions: 8,
    lastWorked: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago
    relatedSessionIds: ['session1', 'session2'],
    energyLevel: EnergyLevel.HIGH,
    complexity: Complexity.COMPLEX,
    inspiration: 9,
    createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['vision', 'product', 'claude'],
    dependencies: [],
    blockedBy: [],
    aiSuggestions: [
      {
        id: 'suggestion-vision-1',
        blockId: 'vision-1',
        type: 'content_enhancement',
        title: 'Add success metrics',
        description: 'Consider adding specific success metrics to measure vision achievement',
        confidence: 0.85,
        suggestedContent: 'Success metrics:\n- 90% user retention\n- <2min context recovery time\n- 5x faster project onboarding',
        createdAt: new Date(),
        isApplied: false
      }
    ]
  },
  {
    id: 'vision-2',
    projectId: '1',
    title: 'Empower vibe-based coding workflows',
    content: 'Support developers who work based on energy levels and mood, with smart task matching and inspiration tracking.',
    lane: BlockLane.VISION,
    status: BlockStatus.NOT_STARTED,
    progress: 0,
    effort: 50,
    priority: Priority.MEDIUM,
    claudeSessions: 2,
    lastWorked: null,
    relatedSessionIds: [],
    energyLevel: EnergyLevel.MEDIUM,
    complexity: Complexity.MODERATE,
    inspiration: 8,
    createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['vibe-coding', 'ux', 'energy'],
    dependencies: [],
    blockedBy: []
  },

  // Goals Lane
  {
    id: 'goals-1',
    projectId: '1',
    title: 'Implement swim lane board interface',
    content: 'Create a responsive swim lane board with drag-and-drop functionality, proper spacing, and Claude-inspired design.',
    lane: BlockLane.GOALS,
    status: BlockStatus.IN_PROGRESS,
    progress: 75,
    effort: 16,
    priority: Priority.HIGH,
    claudeSessions: 12,
    lastWorked: new Date(Date.now() - 30 * 60 * 1000), // 30 minutes ago
    relatedSessionIds: ['session3', 'session4', 'session5'],
    energyLevel: EnergyLevel.HIGH,
    complexity: Complexity.MODERATE,
    inspiration: 7,
    createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['ui', 'react', 'board'],
    dependencies: [],
    blockedBy: []
  },
  {
    id: 'goals-2',
    projectId: '1',
    title: 'Build MCP integration for Claude Code',
    content: 'Integrate with Claude Code via Model Context Protocol to enable real-time project synchronization.',
    lane: BlockLane.GOALS,
    status: BlockStatus.BLOCKED,
    progress: 20,
    effort: 24,
    priority: Priority.URGENT,
    claudeSessions: 5,
    lastWorked: new Date(Date.now() - 24 * 60 * 60 * 1000), // 1 day ago
    relatedSessionIds: ['session6'],
    energyLevel: EnergyLevel.MEDIUM,
    complexity: Complexity.COMPLEX,
    inspiration: 6,
    createdAt: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['mcp', 'integration', 'claude-code'],
    dependencies: [],
    blockedBy: ['goals-3'],
    aiSuggestions: [
      {
        id: 'suggestion-goals-2',
        blockId: 'goals-2',
        type: 'task_breakdown',
        title: 'Break down MCP integration',
        description: 'This complex task should be broken into smaller, manageable pieces',
        confidence: 0.92,
        suggestedSubtasks: [
          { title: 'Research MCP protocol specification', effort: 4 },
          { title: 'Set up WebSocket connection', effort: 6 },
          { title: 'Implement message handling', effort: 8 },
          { title: 'Add error handling and reconnection', effort: 6 }
        ],
        createdAt: new Date(),
        isApplied: false
      }
    ]
  },
  {
    id: 'goals-3',
    projectId: '1',
    title: 'Design AI suggestion system',
    content: 'Create an AI system that provides intelligent suggestions for content enhancement, task breakdown, and priority adjustments.',
    lane: BlockLane.GOALS,
    status: BlockStatus.NOT_STARTED,
    progress: 0,
    effort: 20,
    priority: Priority.MEDIUM,
    claudeSessions: 0,
    lastWorked: null,
    relatedSessionIds: [],
    energyLevel: EnergyLevel.PEAK,
    complexity: Complexity.COMPLEX,
    inspiration: 9,
    createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['ai', 'suggestions', 'intelligence'],
    dependencies: [],
    blockedBy: []
  },

  // Current Sprint Lane
  {
    id: 'current-1',
    projectId: '1',
    title: 'Fix responsive layout issues',
    content: 'The left sidebar is not properly hiding on mobile screens. Need to adjust Tailwind classes and test across devices.',
    lane: BlockLane.CURRENT,
    status: BlockStatus.IN_PROGRESS,
    progress: 60,
    effort: 4,
    priority: Priority.HIGH,
    claudeSessions: 3,
    lastWorked: new Date(Date.now() - 10 * 60 * 1000), // 10 minutes ago
    relatedSessionIds: ['session7'],
    energyLevel: EnergyLevel.MEDIUM,
    complexity: Complexity.SIMPLE,
    inspiration: 5,
    createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['bug', 'responsive', 'css'],
    dependencies: [],
    blockedBy: []
  },
  {
    id: 'current-2',
    projectId: '1',
    title: 'Add block creation modal',
    content: 'Create a comprehensive modal for adding new blocks with all fields: title, content, priority, energy level, etc.',
    lane: BlockLane.CURRENT,
    status: BlockStatus.IN_PROGRESS,
    progress: 30,
    effort: 8,
    priority: Priority.MEDIUM,
    claudeSessions: 4,
    lastWorked: new Date(Date.now() - 45 * 60 * 1000), // 45 minutes ago
    relatedSessionIds: ['session8'],
    energyLevel: EnergyLevel.HIGH,
    complexity: Complexity.MODERATE,
    inspiration: 7,
    createdAt: new Date(Date.now() - 12 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['modal', 'form', 'ui'],
    dependencies: [],
    blockedBy: []
  },

  // Next Sprint Lane
  {
    id: 'next-1',
    projectId: '1',
    title: 'Implement drag-and-drop between lanes',
    content: 'Add drag-and-drop functionality to move blocks between swim lanes. Should update the block lane and trigger re-sort.',
    lane: BlockLane.NEXT,
    status: BlockStatus.NOT_STARTED,
    progress: 0,
    effort: 12,
    priority: Priority.MEDIUM,
    claudeSessions: 0,
    lastWorked: null,
    relatedSessionIds: [],
    energyLevel: EnergyLevel.HIGH,
    complexity: Complexity.MODERATE,
    inspiration: 8,
    createdAt: new Date(Date.now() - 6 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['drag-drop', 'interaction', 'ux'],
    dependencies: ['goals-1'],
    blockedBy: []
  },
  {
    id: 'next-2',
    projectId: '1',
    title: 'Add keyboard shortcuts',
    content: 'Implement keyboard shortcuts for common actions: new block (n), search (/), focus mode (f), save (cmd+s).',
    lane: BlockLane.NEXT,
    status: BlockStatus.NOT_STARTED,
    progress: 0,
    effort: 6,
    priority: Priority.LOW,
    claudeSessions: 0,
    lastWorked: null,
    relatedSessionIds: [],
    energyLevel: EnergyLevel.MEDIUM,
    complexity: Complexity.SIMPLE,
    inspiration: 6,
    createdAt: new Date(Date.now() - 4 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['shortcuts', 'accessibility', 'ux'],
    dependencies: [],
    blockedBy: []
  },
  {
    id: 'next-3',
    projectId: '1',
    title: 'Create project analytics dashboard',
    content: 'Build analytics showing completion rates, time spent, mood trends, and productivity metrics over time.',
    lane: BlockLane.NEXT,
    status: BlockStatus.NOT_STARTED,
    progress: 0,
    effort: 16,
    priority: Priority.MEDIUM,
    claudeSessions: 1,
    lastWorked: null,
    relatedSessionIds: [],
    energyLevel: EnergyLevel.PEAK,
    complexity: Complexity.COMPLEX,
    inspiration: 9,
    createdAt: new Date(Date.now() - 2 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['analytics', 'charts', 'metrics'],
    dependencies: [],
    blockedBy: []
  },

  // Context Lane
  {
    id: 'context-1',
    projectId: '1',
    title: 'Design System Documentation',
    content: 'Complete documentation of the Claude-inspired design system including color palette, typography, component usage, and examples.',
    lane: BlockLane.CONTEXT,
    status: BlockStatus.COMPLETED,
    progress: 100,
    effort: 6,
    priority: Priority.LOW,
    claudeSessions: 2,
    lastWorked: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),
    relatedSessionIds: ['session9'],
    energyLevel: EnergyLevel.MEDIUM,
    complexity: Complexity.SIMPLE,
    inspiration: 6,
    createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['docs', 'design-system', 'reference'],
    dependencies: [],
    blockedBy: []
  },
  {
    id: 'context-2',
    projectId: '1',
    title: 'TypeScript Interface Definitions',
    content: 'Comprehensive type definitions for all entities: Block, Project, Session, Context, AI Suggestions, User Preferences.',
    lane: BlockLane.CONTEXT,
    status: BlockStatus.COMPLETED,
    progress: 100,
    effort: 8,
    priority: Priority.HIGH,
    claudeSessions: 5,
    lastWorked: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000),
    relatedSessionIds: ['session10', 'session11'],
    energyLevel: EnergyLevel.HIGH,
    complexity: Complexity.MODERATE,
    inspiration: 7,
    createdAt: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['typescript', 'types', 'structure'],
    dependencies: [],
    blockedBy: []
  },
  {
    id: 'context-3',
    projectId: '1',
    title: 'Research: Vibe-based Coding Patterns',
    content: 'Research and document patterns for developers who code based on energy levels, mood, and inspiration rather than strict schedules.',
    lane: BlockLane.CONTEXT,
    status: BlockStatus.ON_HOLD,
    progress: 40,
    effort: 12,
    priority: Priority.LOW,
    claudeSessions: 3,
    lastWorked: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),
    relatedSessionIds: ['session12'],
    energyLevel: EnergyLevel.PEAK,
    complexity: Complexity.MODERATE,
    inspiration: 9,
    createdAt: new Date(Date.now() - 8 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(),
    createdBy: 'user1',
    tags: ['research', 'vibe-coding', 'patterns'],
    dependencies: [],
    blockedBy: []
  }
]